{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useCallback } from \"react\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n\n    setIsLoading(false);\n  }, [applyData]);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n\nexport default useHttp;","map":{"version":3,"names":["useState","useCallback","useHttp","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["/Users/orkhan/Downloads/04-onwards-to-a-more-realistic-example/src/hooks/use-https.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useCallback } from \"react\";\n\nconst useHttp = () => {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const sendRequest = useCallback(async (requestConfig, applyData) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(\n                requestConfig.url, {\n                method: requestConfig.method ? requestConfig.method : \"GET\",\n                headers: requestConfig.headers ? requestConfig.headers : {},\n                body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n            }\n            );\n\n            if (!response.ok) {\n                throw new Error('Request failed!');\n            }\n\n            const data = await response.json();\n            applyData(data)\n\n        } catch (err) {\n            setError(err.message || 'Something went wrong!');\n        }\n        setIsLoading(false);\n    }, [applyData])\n\n    return {\n        isLoading,\n        error,\n        sendRequest\n    }\n}\n\nexport default useHttp;\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAElB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;EAEA,MAAMO,WAAW,GAAGN,WAAW,CAAC,OAAOO,aAAP,EAAsBC,SAAtB,KAAoC;IAChEL,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;;IACA,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CACxBH,aAAa,CAACI,GADU,EACL;QACnBC,MAAM,EAAEL,aAAa,CAACK,MAAd,GAAuBL,aAAa,CAACK,MAArC,GAA8C,KADnC;QAEnBC,OAAO,EAAEN,aAAa,CAACM,OAAd,GAAwBN,aAAa,CAACM,OAAtC,GAAgD,EAFtC;QAGnBC,IAAI,EAAEP,aAAa,CAACO,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAeT,aAAa,CAACO,IAA7B,CAArB,GAA0D;MAH7C,CADK,CAA5B;;MAQA,IAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;QACd,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;MACH;;MAED,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;MACAZ,SAAS,CAACW,IAAD,CAAT;IAEH,CAhBD,CAgBE,OAAOE,GAAP,EAAY;MACVhB,QAAQ,CAACgB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;IACH;;IACDnB,YAAY,CAAC,KAAD,CAAZ;EACH,CAvB8B,EAuB5B,CAACK,SAAD,CAvB4B,CAA/B;EAyBA,OAAO;IACHN,SADG;IAEHE,KAFG;IAGHE;EAHG,CAAP;AAKH,CAnCD;;GAAML,O;;AAqCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}